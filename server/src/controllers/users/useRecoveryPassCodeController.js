//Importar los modelos.
import updateUserPassRecoverModel from '../../models/users/updateUserPassRecoveryModel.js';

// Importar la funci√≥n que genera errores.
import generateErrorUtil from '../../utils/generateErrorUtil.js';

// Funci√≥n controladora que env√≠a un c√≥digo de recuperaci√≥n de contrase√±a al email indicado.
const useRecoveryPassCodeController = async (req, res, next) => {
    try {
        console.log('üõ†Ô∏è Entrando en el controlador...');
        console.log('üîπ Params:', req.params);
        console.log('üîπ Body:', req.body);
        // Obtenemos el c√≥digo de recuperaci√≥n de contrase√±a.
        const { userId, recoverPassCode } = req.params;

        // Obtenemos los datos necesarios.
        const { newPassword } = req.body;

        // Lanzamos un error si falta alg√∫n campo.
        if (!newPassword) {
            generateErrorUtil(400, 'Falta la nueva contrase√±a');
        }

        // Actualizar la contrase√±a del usuario.
        await updateUserPassRecoverModel(userId, newPassword, recoverPassCode);

        res.send({
            status: 'ok',
            message: 'Contrase√±a actualizada',
        });
    } catch (err) {
        next(err);
    }
};

export default useRecoveryPassCodeController;
